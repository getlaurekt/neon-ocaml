let eq (A : Type) (x : A) (y : A) = 
    forall P : (A -> Type) => P(x) -> P(y)

let symm_type =
    forall (A: Type) (x: A) (y: A) => eq(A,x,y) -> eq(A,y,x)

lemma symm : symm_type = 
    fun A x y xy P py => xy((fun z => P(z) -> P(x)), (fun px => px), py)