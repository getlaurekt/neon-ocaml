data List (A: Type) =
| Nil
| Cons (x: A) (xs: List(A))

let id (A: Type) (xs: List(A)) = xs

let nums = Cons(Int, 1, Cons(Int, 2, Nil(Int)))

let x = match nums with
| Cons(A, x, xs) -> x
| Nil(A) -> 42